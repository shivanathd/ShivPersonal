<apex:page sidebar="false" showheader="false" controller="CheckInController">
    <apex:includeScript value="https://cdnjs.cloudflare.com/ajax/libs/knockout/2.1.0/knockout-min.js" />
    
    <!--Include Stylsheets for the Mobile look and feel -->
    <apex:stylesheet value="{!URLFOR($Resource.Mobile_Design_Templates, 
                'Mobile-Design-Templates-master/common/css/app.min.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Mobile_Design_Templates, 
                'Mobile-Design-Templates-master/common/js/jQuery2.0.2.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Mobile_Design_Templates, 
                'Mobile-Design-Templates-master/common/js/jquery.touchwipe.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Mobile_Design_Templates, 
                'Mobile-Design-Templates-master/common/js/main.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.CheckInCSS)}" />
                
    <apex:includeScript value="/canvas/sdk/js/publisher.js" />
     
    <div class="app-content" id="startPage" data-bind="ifnot: selectedAccount">
    <div class="list-view-header">Nearby Accounts</div>
        <ul class="list-view with-swipe right-one-icons" data-bind="foreach: accountArray">
          <li>
            <a href="#" class="content" data-bind="click: toggleSelect">
              <h2 data-bind="text: Name"></h2>
              <p data-bind="text: BillingStreet"></p>
              <div class="list-view-icons">
                <span class="icon-right-arrow">&nbsp;</span>
              </div>
            </a>
          </li>
        </ul>
    </div>
    <div class="result-page" id="resultPage" data-bind="if: selectedAccount">
    	<div class="list-view-header">Check In Information</div>
        <div data-bind="with: selectedAccount">
            <section class="border-bottom">
               <div class="content">
                  <h3>Account Name</h3>
                  <div class="form-control-group">
                    <div class="form-control form-control-text">
                      <h1 data-bind="text: Name"></h1>
                      <h2 data-bind="text: Id" id="input_acctId" style="display:none;"></h2>
                    </div>
                  </div>
               </div>
            </section>
                    
            <section class="border-bottom">
               <div class="content">
                  <h3>Subject</h3>
                  <div class="form-control-group">
                    <div class="form-control form-control-text">
                        <h2>On-Site</h2>
                    </div>
                  </div>
               </div>
            </section>
                    
          	<section class="border-bottom">
                <div class="content">
                  <h3>Status</h3>
                  <div class="form-control-group">
                    <div class="form-control form-control-text">
                      <select id="input_status" data-bind="options: Task.availableStatus, value: Task.Status"></select>
                    </div>
                  </div>
                </div>
          	</section>
      
            <section class="border-bottom">
              <div class="content">
                  <h3>Comments</h3>
                  <div class="form-control-group">
                    <div class="form-control form-control-text">
                      <input type="textarea" id="input_comments" value="Check In: On-Site Meeting"/>
                    </div>
                  </div>
              </div>
            </section>
      
            <section class="data-capture-buttons one-buttons">
                <div class="content">
                  <section class="data-capture-buttons one-buttons">
                    <a href="#" data-bind="click: toggleSelect" >Back</a>
                  </section>
                </div>
            </section>
    	</div> 
  	</div>
<script>
  
  $(document).ready(function(){
      initialize();
  });
        
  var ViewModel = {
    accountArray: ko.observableArray([]),
    selectedAccount: ko.observable(null)
  };

    function Task(json){
        json = json || {};
        this.availableStatus = ko.observableArray(['Completed', 'Not Started', 'Waiting on Someone Else', 'Deferred']);

    }
  
  function Account(json) {
    console.log(json);
    this.Id = json.Id || null;
    this.Name = json.Name || '';
    this.BillingStreet = json.BillingStreet || '';
    
    this.Task = new Task();
    
    this.isSelected = ko.computed(function() {
      return ViewModel.selectedAccount() !== null &&
             ViewModel.selectedAccount().Id === this.Id;
    }, this);
      
    this.toggleSelect = function(account) {
      if (ViewModel.selectedAccount()) {
        ViewModel.selectedAccount(null);
        $("#startPage").show();
        $("#resultPage").hide();
        
      } else {
        ViewModel.selectedAccount(account);
        //This method will activate the publish button so the form can be submitted 
        Sfdc.canvas.publisher.publish({name: "publisher.setValidForSubmit", payload:"true"});
        
        $("#startPage").hide();
        $("#resultPage").show();
      }
    };
  }
  
  ko.applyBindings(ViewModel);
  
  function initialize(){
      var lat = 0;
      var lon = 0;
      
      if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position){
                lat = position.coords.latitude;
                lon = position.coords.longitude;
                
                getNearby();
          });
          
          function getNearby(){ 
             Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.CheckInController.getNearby}', lat, lon,
                 function(result, event){
                     if(event.status){
                            ViewModel.accountArray(ko.utils.arrayMap(result, function(account) {
                                return new Account(account);
                            }));
                        } else if (event.type === 'exception'){
                            console.log(result);
                        } else {
                                                        
                        }
                });
          }
      } else {
          // display can't get location
      }
     }

        Sfdc.canvas.publisher.subscribe({name: "publisher.post", onData:function(e) {
            // This subscribe fires when the user hits 'Submit' in the publisher
            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.CheckInController.insertTask}', $('#input_acctId').text(), $('#input_status').val(), $('#input_comments').val(),
                function(result, event){
                    if(event.status){
                        console.log(result);
                        //Closes the publisher and refreshes the feed
                        Sfdc.canvas.publisher.publish({name: "publisher.close", payload:{ refresh:"true"}});
                    } else if (event.type === 'exception'){
                        console.log(result);
                    } else {
                                        
                    }
                }
            );  
        }});                                           

</script>
</apex:page>